diff --git a/attestation_record.cpp b/attestation_record.cpp
index 8aed9ad..e477b86 100644
--- a/attestation_record.cpp
+++ b/attestation_record.cpp
@@ -1,4 +1,12 @@
 /*
+ * Copyright (c) 2017 Qualcomm Technologies, Inc.
+ * All Rights Reserved.
+ * Confidential and Proprietary - Qualcomm Technologies, Inc.
+ *
+ * NOT A CONTRIBUTION
+ * Apache license notifications and license are retained
+ * for attribution purposes only.
+ *
  * Copyright 2016 The Android Open Source Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -328,6 +336,18 @@ static keymaster_error_t build_auth_list(const AuthorizationSet& auth_list, KM_A
         case KM_TAG_APPLICATION_ID:
             string_ptr = &record->application_id;
             break;
+
+        /* Soter Tags begins */
+        case KM_TAG_SOTER_IS_FROM_SOTER:
+        case KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_ATTK_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_COMMON_KEY_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_AUTO_ADD_COUNTER_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_IS_SECMSG_FID_COUNTER_SIGNED_WHEN_SIGN:
+        case KM_TAG_SOTER_USE_NEXT_ATTK:
+        case KM_TAG_SOTER_UID:
+        case KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY_BLOB:
+            continue;
         }
 
         keymaster_tag_type_t type = keymaster_tag_get_type(entry.tag);
diff --git a/include/keymaster/keymaster_tags.h b/include/keymaster/keymaster_tags.h
index 2c7ac03..058d246 100644
--- a/include/keymaster/keymaster_tags.h
+++ b/include/keymaster/keymaster_tags.h
@@ -1,4 +1,12 @@
 /*
+ * Copyright (c) 2017 Qualcomm Technologies, Inc.
+ * All Rights Reserved.
+ * Confidential and Proprietary - Qualcomm Technologies, Inc.
+ *
+ * NOT A CONTRIBUTION
+ * Apache license notifications and license are retained
+ * for attribution purposes only.
+ *
  * Copyright 2014 The Android Open Source Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -166,6 +174,15 @@ DECLARE_KEYMASTER_TAG(KM_UINT, TAG_OS_PATCHLEVEL);
 DECLARE_KEYMASTER_TAG(KM_BYTES, TAG_UNIQUE_ID);
 DECLARE_KEYMASTER_TAG(KM_BYTES, TAG_ATTESTATION_CHALLENGE);
 DECLARE_KEYMASTER_TAG(KM_BOOL, TAG_RESET_SINCE_ID_ROTATION);
+DECLARE_KEYMASTER_TAG(KM_BOOL, TAG_SOTER_IS_FROM_SOTER);
+DECLARE_KEYMASTER_TAG(KM_BOOL, TAG_SOTER_IS_AUTO_SIGNED_WITH_ATTK_WHEN_GET_PUBLIC_KEY);
+DECLARE_KEYMASTER_TAG(KM_BOOL, TAG_SOTER_IS_AUTO_SIGNED_WITH_COMMON_KEY_WHEN_GET_PUBLIC_KEY);
+DECLARE_KEYMASTER_TAG(KM_BYTES, TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY);
+DECLARE_KEYMASTER_TAG(KM_BOOL, TAG_SOTER_AUTO_ADD_COUNTER_WHEN_GET_PUBLIC_KEY);
+DECLARE_KEYMASTER_TAG(KM_BOOL, TAG_SOTER_IS_SECMSG_FID_COUNTER_SIGNED_WHEN_SIGN);
+DECLARE_KEYMASTER_TAG(KM_BOOL, TAG_SOTER_USE_NEXT_ATTK);
+DECLARE_KEYMASTER_TAG(KM_UINT, TAG_SOTER_UID);
+DECLARE_KEYMASTER_TAG(KM_BYTES, TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY_BLOB);
 
 // DECLARE_KEYMASTER_ENUM_TAG is used to declare TypedEnumTag instances for each enum keymaster tag.
 #define DECLARE_KEYMASTER_ENUM_TAG(type, name, enumtype)                                           \
diff --git a/keymaster_enforcement.cpp b/keymaster_enforcement.cpp
index 21ee01f..8afe7a6 100644
--- a/keymaster_enforcement.cpp
+++ b/keymaster_enforcement.cpp
@@ -1,4 +1,12 @@
 /*
+ * Copyright (c) 2017 Qualcomm Technologies, Inc.
+ * All Rights Reserved.
+ * Confidential and Proprietary - Qualcomm Technologies, Inc.
+ *
+ * NOT A CONTRIBUTION
+ * Apache license notifications and license are retained
+ * for attribution purposes only.
+ *
  * Copyright (C) 2014 The Android Open Source Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -341,6 +349,19 @@ keymaster_error_t KeymasterEnforcement::AuthorizeBegin(const keymaster_purpose_t
 
         case KM_TAG_BOOTLOADER_ONLY:
             return KM_ERROR_INVALID_KEY_BLOB;
+
+        /* Soter Tags begins */
+        case KM_TAG_SOTER_IS_FROM_SOTER:
+        case KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_ATTK_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_COMMON_KEY_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_AUTO_ADD_COUNTER_WHEN_GET_PUBLIC_KEY:
+        case KM_TAG_SOTER_IS_SECMSG_FID_COUNTER_SIGNED_WHEN_SIGN:
+        case KM_TAG_SOTER_USE_NEXT_ATTK:
+        case KM_TAG_SOTER_UID:
+        case KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY_BLOB:
+            break;
+        /* Soter Tags ends */
         }
     }
 
diff --git a/keymaster_tags.cpp b/keymaster_tags.cpp
index 238bc33..b50b957 100644
--- a/keymaster_tags.cpp
+++ b/keymaster_tags.cpp
@@ -1,4 +1,12 @@
 /*
+ * Copyright (c) 2017 Qualcomm Technologies, Inc.
+ * All Rights Reserved.
+ * Confidential and Proprietary - Qualcomm Technologies, Inc.
+ *
+ * NOT A CONTRIBUTION
+ * Apache license notifications and license are retained
+ * for attribution purposes only.
+ *
  * Copyright 2014 The Android Open Source Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -111,8 +119,27 @@ const char* StringifyTag(keymaster_tag_t tag) {
         return "KM_TAG_ALLOW_WHILE_ON_BODY";
     case KM_TAG_ATTESTATION_CHALLENGE:
         return "KM_TAG_ATTESTATION_CHALLENGE";
+    case KM_TAG_SOTER_IS_FROM_SOTER:
+        return "KM_TAG_SOTER_IS_FROM_SOTER";
+    case KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_ATTK_WHEN_GET_PUBLIC_KEY:
+        return "KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_ATTK_WHEN_GET_PUBLIC_KEY";
+    case KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_COMMON_KEY_WHEN_GET_PUBLIC_KEY:
+        return "KM_TAG_SOTER_IS_AUTO_SIGNED_WITH_COMMON_KEY_WHEN_GET_PUBLIC_KEY";
+    case KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY:
+        return "KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY";
+    case KM_TAG_SOTER_AUTO_ADD_COUNTER_WHEN_GET_PUBLIC_KEY:
+        return "KM_TAG_SOTER_AUTO_ADD_COUNTER_WHEN_GET_PUBLIC_KEY";
+    case KM_TAG_SOTER_IS_SECMSG_FID_COUNTER_SIGNED_WHEN_SIGN:
+        return "KM_TAG_SOTER_IS_SECMSG_FID_COUNTER_SIGNED_WHEN_SIGN";
+    case KM_TAG_SOTER_USE_NEXT_ATTK:
+        return "KM_TAG_SOTER_USE_NEXT_ATTK";
+    case KM_TAG_SOTER_UID:
+        return "KM_TAG_SOTER_UID";
+    case KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY_BLOB:
+        return "KM_TAG_SOTER_AUTO_SIGNED_COMMON_KEY_WHEN_GET_PUBLIC_KEY_BLOB";
+        return "<Unknown>";
     }
-    return "<Unknown>";
+
 }
 #endif  // KEYMASTER_NAME_TAGS
 
